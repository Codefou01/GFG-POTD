Java Code :

class Solution {
    public int minJumps(int[] arr) {
        // code here
        int count = 0, max = 0, curr = arr[0];
        int n = arr.length;
        
        for(int i=0; i<n; i++){
            
           int val = arr[i];
           curr = Math.max(curr,i+val);
           
           if(i >= max){
               
                if(curr == i) return -1;               
                count++;
                max = curr;
                curr = 0;
                if(max >= n-1) return count; 
                
           }
           
        }
        
        
        return -1;
    }
}




C++ Code :

class Solution {
public:
    int minJumps(vector<int>& arr) {
        int n = arr.size();
        if (n <= 1) return 0;
        if (arr[0] == 0) return -1;

        int count = 0, maxReach = 0, curr = arr[0];

        for (int i = 0; i < n; i++) {
            int val = arr[i];
            curr = max(curr, i + val);

            if (i >= maxReach) {
                if (curr == i) return -1;  
                count++;
                maxReach = curr;
                curr = 0;
                if (maxReach >= n - 1) return count;
            }
        }

        return -1;
    }
};
